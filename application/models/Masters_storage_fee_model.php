<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Masters_storage_fee_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get masters_storage_fee by STORAGE_ID
     */
    function get_masters_storage_fee($STORAGE_ID)
    {
        return $this->db->get_where('masters_storage_fee',array('STORAGE_ID'=>$STORAGE_ID))->row_array();
    }
    
    /*
     * Get all masters_storage_fee
     */
    function get_all_masters_storage_fee()
    {
        return $this->db->get('masters_storage_fee')->result_array();
    }
    
    /*
     * function to add new masters_storage_fee
     */
    function add_masters_storage_fee($params)
    {
        $this->db->insert('masters_storage_fee',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update masters_storage_fee
     */
    function update_masters_storage_fee($STORAGE_ID,$params)
    {
        $this->db->where('STORAGE_ID',$STORAGE_ID);
        $response = $this->db->update('masters_storage_fee',$params);
        if($response)
        {
            return "masters_storage_fee updated successfully";
        }
        else
        {
            return "Error occuring while updating masters_storage_fee";
        }
    }
    
    /*
     * function to delete masters_storage_fee
     */
    function delete_masters_storage_fee($STORAGE_ID)
    {
        $response = $this->db->delete('masters_storage_fee',array('STORAGE_ID'=>$STORAGE_ID));
        if($response)
        {
            return "masters_storage_fee deleted successfully";
        }
        else
        {
            return "Error occuring while deleting masters_storage_fee";
        }
    }
}
