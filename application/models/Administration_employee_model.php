<?php

/*
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */

class Administration_employee_model extends CI_Model {

    function __construct() {
        parent::__construct();
    }

    /*
     * Get administration_employee by EMP_ID
     */

    function get_administration_employee($EMP_ID) {
        return $this->db->get_where('administration_employees', array('EMP_ID' => $EMP_ID))->row_array();
    }

    /**
     * Function to get all administration employees data
     * 
     * @return type
     */
    function get_all_administration_employees_data($conditions) {
        return $this->db->where($conditions)->get('administration_employees')->result_array();
    }

    /**
     * Get all administration_employees
     * 
     * @param array $request
     * @param array $user_data
     * 
     * @return array result
     */
    function get_all_administration_employees($request, $user_data = array()) {
        try {
            $sql_details = array('user' => $this->db->username, 'pass' => $this->db->password, 'db' => $this->db->database, 'host' => $this->db->hostname);
            $request['searchcolumns'] = array();
            $columns = array(
                array(
                    'db' => 'EMP_ID',
                    'dt' => 'DT_RowId',
                    'formatter' => function( $d, $row ) {
                        return 'row_' . $d;
                    }
                ),
                array('db' => 'EMP_ID',
                    'dt' => 0,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'EMP_NAME',
                    'dt' => 1,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'CLIENT_NAME',
                    'dt' => 2,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'IC_NO',
                    'dt' => 3,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'STAFF_NO',
                    'dt' => 4,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'ADDRESS',
                    'dt' => 5,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'MOBILE_NO',
                    'dt' => 6,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'PHONE_NO',
                    'dt' => 7,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'EMAIL_ID',
                    'dt' => 8,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'GENDER',
                    'dt' => 9,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'DESIGNATION_NAME',
                    'dt' => 10,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'BASIC_SALARY',
                    'dt' => 11,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'LANGUAGE',
                    'dt' => 12,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'VIEW_OTHER_BRANCH_DETAILS',
                    'dt' => 13,
                    'formatter' => function($d, $row) {
                        return (!empty($d) && $d == 1) ? "Yes" : "No";
                    }
                ),
                array('db' => 'ROLE_NAME',
                    'dt' => 14,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'EMP_ID',
                    'dt' => 15,
                    'formatter' => function($d, $row) {
                        $returnString = "";
                        $returnString .= '<a href="' . site_url('administration_employee/edit/' . $d) . '" class="btn btn-info btn-xs"><span class="fa fa-pencil"></span> Edit</a>&nbsp;&nbsp;';
                        $returnString .= '<a data-href="' . site_url('administration_employee/remove') . '" data-table-name="admin_emp_table" data-id=' . $d . ' data-desc="You will be perminently deleting this client." data-message= "Are you sure to delete?" class="btn btn-danger btn-xs delete-row"><span class="fa fa-trash"></span> Delete</a>';
                        return $returnString;
                    }
                )
            );
            $join = "";
            $join .= " JOIN client_info ci ON ci.CLIENT_ID = ae.CLIENT_ID AND ci.IS_ACTIVE = 1";
            $join .= " JOIN roles r ON r.ROLE_ID = ae.ROLE_ID AND ae.IS_ACTIVE = 1";
            $join .= " JOIN administration_designation ad ON ad.DESIGNATION_ID = ae.DESIGNATION_ID AND ad.IS_ACTIVE = 1 AND ad.CREATED_BY = " . $this->session->userdata["EMP_DATA"]['EMP_ID'];
            $where = "";

            $query_columns_array = array("EMP_ID, EMP_NAME, ae.CLIENT_ID, IC_NO, STAFF_NO, ADDRESS, MOBILE_NO, PHONE_NO, EMAIL_ID, GENDER, ACTIVE_STATUS, BASIC_SALARY, LANGUAGE, EMPLOYEE_PIC_PATH, VIEW_OTHER_BRANCH_DETAILS, MULTIPLE_LOGINS, ROLE_NAME, CLIENT_NAME, DESIGNATION_NAME");

            $custom_where = array();
            $where .= " WHERE ae.IS_ACTIVE = 1 AND ae.EMP_ID != 1 AND ae.CREATED_BY = " . $this->session->userdata["EMP_DATA"]['EMP_ID'];
            $custom_where_string = (count($custom_where) > 0) ? implode(" AND ", array_unique($custom_where)) : "";
            $request['custom_where'] = $custom_where_string;
            $query_columns = implode(",", array_unique($query_columns_array));
            $sql_query = 'SELECT $query_columns from administration_employees ae' . $join . $where;
            $result = datatable::simple($request, $sql_details, $sql_query, $query_columns, $columns);
            $start = $_REQUEST['start'];
            foreach ($result['data'] as &$res) {
                $start++;
                $res[0] = $start;
            }
            return $result;
        } catch (Exception $e) {
            log_message("Error", $e->getMessage());
            return false;
        }
    }

    /*
     * function to add new administration_employee
     */

    function add_administration_employee($params) {
        $this->db->insert('administration_employees', $params);
        return $this->db->insert_id();
    }

    /*
     * function to update administration_employee
     */

    function update_administration_employee($EMP_ID, $params) {
        $this->db->where('EMP_ID', $EMP_ID);
        $response = $this->db->update('administration_employees', $params);
        return $response;
    }

    /*
     * function to delete administration_employee
     */

    function delete_administration_employee($EMP_ID) {
        return $this->db->where(array('EMP_ID' => $EMP_ID))->update('administration_employees', array("IS_ACTIVE" => 0));
    }

}
