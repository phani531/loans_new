<?php

/*
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */

class Masters_advertisement_model extends CI_Model {

    function __construct() {
        parent::__construct();
    }

    /**
     * Function to get all advertisements data
     * 
     * @param array $request
     * @param array $user_data
     * 
     * @return json result
     */
    function getAllAdvertisementsData($request, $user_data = array()) {
        try {
            $sql_details = array('user' => $this->db->username, 'pass' => $this->db->password, 'db' => $this->db->database, 'host' => $this->db->hostname);
            $request['searchcolumns'] = array();

            $columns = array(
                array(
                    'db' => 'ADVERTISEMENT_ID',
                    'dt' => 'DT_RowId',
                    'formatter' => function( $d, $row ) {
                        return 'row_' . $d;
                    }
                ),
                array('db' => 'ADVERTISEMENT_ID',
                    'dt' => 0,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'ADVERTISEMENT_NAME',
                    'dt' => 1,
                    'formatter' => function($d, $row) {
                        return !empty($d) ? $d : "N/A";
                    }
                ),
                array('db' => 'ADVERTISEMENT_ID',
                    'dt' => 2,
                    'formatter' => function($d, $row) {
                        $returnString = "";
                        $returnString .= '<a href="' . site_url('masters_advertisement/edit/' . $row['ADVERTISEMENT_ID']) . '" class="btn btn-info btn-xs"><span class="fa fa-pencil"></span> Edit</a><br>';
                        $returnString .= '<a href="' . site_url('masters_advertisement/remove/' . $row['ADVERTISEMENT_ID']) . '" class="btn btn-danger btn-xs"><span class="fa fa-trash"></span> Delete</a>';
                        return $returnString;
                    }
                )
            );

            $join = "";
            $where = "";

            $query_columns_array = array("ADVERTISEMENT_ID ,ADVERTISEMENT_NAME");

            $custom_where = array();
            $where .= " WHERE CREATED_BY = " . $_SESSION['EMP_DATA']['LOGIN_ID'];
            $custom_where_string = (count($custom_where) > 0) ? implode(" AND ", array_unique($custom_where)) : "";
            $request['custom_where'] = $custom_where_string;
            $query_columns = implode(",", array_unique($query_columns_array));
            $sql_query = 'SELECT $query_columns from masters_advertisements' . $join . $where;
            $result = datatable::simple($request, $sql_details, $sql_query, $query_columns, $columns);
            $start = $_REQUEST['start'];
            return $result;
        } catch (Exception $e) {
            log_message("Error : ", $this->db->_error_message());
            return fasle;
        }
    }

    /*
     * Get masters_advertisement by ADVERTISEMENT_ID
     */

    function get_masters_advertisement($ADVERTISEMENT_ID) {
        return $this->db->get_where('masters_advertisements', array('ADVERTISEMENT_ID' => $ADVERTISEMENT_ID))->row_array();
    }

    /*
     * Get all masters_advertisements
     */

    function get_all_masters_advertisements() {
        return $this->db->get('masters_advertisements')->result_array();
    }

    /*
     * function to add new masters_advertisement
     */

    function add_masters_advertisement($params) {
        $this->db->insert('masters_advertisements', $params);
        return $this->db->insert_id();
    }

    /*
     * function to update masters_advertisement
     */

    function update_masters_advertisement($ADVERTISEMENT_ID, $params) {
        $this->db->where('ADVERTISEMENT_ID', $ADVERTISEMENT_ID);
        $response = $this->db->update('masters_advertisements', $params);
        if ($response) {
            return "masters_advertisement updated successfully";
        } else {
            return "Error occuring while updating masters_advertisement";
        }
    }

    /*
     * function to delete masters_advertisement
     */

    function delete_masters_advertisement($ADVERTISEMENT_ID) {
        $response = $this->db->delete('masters_advertisements', array('ADVERTISEMENT_ID' => $ADVERTISEMENT_ID));
        if ($response) {
            return "masters_advertisement deleted successfully";
        } else {
            return "Error occuring while deleting masters_advertisement";
        }
    }

}
