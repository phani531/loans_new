<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Customer_loan_payment extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Customer_loan_payment_model');
    } 

    /*
     * Listing of customer_loan_payments
     */
    function index()
    {
        $data['customer_loan_payments'] = $this->Customer_loan_payment_model->get_all_customer_loan_payments();

        $this->load->view('customer_loan_payment/index',$data);
    }

    /*
     * Adding a new customer_loan_payment
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('payment_method','Payment Method','required');
		$this->form_validation->set_rules('late_pay_charges','Late Pay Charges','decimal');
		$this->form_validation->set_rules('lod_charges','Lod Charges','decimal');
		$this->form_validation->set_rules('site_vist_charges','Site Vist Charges','decimal');
		$this->form_validation->set_rules('other_charges','Other Charges','decimal');
		$this->form_validation->set_rules('wd_amount','Wd Amount','greater_than[0]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'payment_date' => $this->input->post('payment_date'),
				'receipt_id' => $this->input->post('receipt_id'),
				'late_pay_charges' => $this->input->post('late_pay_charges'),
				'lod_charges' => $this->input->post('lod_charges'),
				'site_vist_charges' => $this->input->post('site_vist_charges'),
				'other_charges' => $this->input->post('other_charges'),
				'wd_amount' => $this->input->post('wd_amount'),
				'recevied_amount' => $this->input->post('recevied_amount'),
				'card_balance' => $this->input->post('card_balance'),
				'created_by' => $this->input->post('created_by'),
				'modified_by' => $this->input->post('modified_by'),
				'created_date' => $this->input->post('created_date'),
				'modified_date' => $this->input->post('modified_date'),
				'payment_method' => $this->input->post('payment_method'),
				'wd_by' => $this->input->post('wd_by'),
            );
            
            $customer_loan_payment_id = $this->Customer_loan_payment_model->add_customer_loan_payment($params);
            redirect('customer_loan_payment/index');
        }
        else
        {

			$this->load->model('Administration_employee_model');
			$data['all_administration_employees'] = $this->Administration_employee_model->get_all_administration_employees();
                
            $this->load->view('customer_loan_payment/add',$data);
        }
    }  

    /*
     * Editing a customer_loan_payment
     */
    function edit($payment_id)
    {   
        // check if the customer_loan_payment exists before trying to edit it
        $data['customer_loan_payment'] = $this->Customer_loan_payment_model->get_customer_loan_payment($payment_id);
        
        if(isset($data['customer_loan_payment']['payment_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('payment_method','Payment Method','required');
			$this->form_validation->set_rules('late_pay_charges','Late Pay Charges','decimal');
			$this->form_validation->set_rules('lod_charges','Lod Charges','decimal');
			$this->form_validation->set_rules('site_vist_charges','Site Vist Charges','decimal');
			$this->form_validation->set_rules('other_charges','Other Charges','decimal');
			$this->form_validation->set_rules('wd_amount','Wd Amount','greater_than[0]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'payment_date' => $this->input->post('payment_date'),
					'receipt_id' => $this->input->post('receipt_id'),
					'late_pay_charges' => $this->input->post('late_pay_charges'),
					'lod_charges' => $this->input->post('lod_charges'),
					'site_vist_charges' => $this->input->post('site_vist_charges'),
					'other_charges' => $this->input->post('other_charges'),
					'wd_amount' => $this->input->post('wd_amount'),
					'recevied_amount' => $this->input->post('recevied_amount'),
					'card_balance' => $this->input->post('card_balance'),
					'created_by' => $this->input->post('created_by'),
					'modified_by' => $this->input->post('modified_by'),
					'created_date' => $this->input->post('created_date'),
					'modified_date' => $this->input->post('modified_date'),
					'payment_method' => $this->input->post('payment_method'),
					'wd_by' => $this->input->post('wd_by'),
                );

                $this->Customer_loan_payment_model->update_customer_loan_payment($payment_id,$params);            
                redirect('customer_loan_payment/index');
            }
            else
            {
				$this->load->model('Administration_employee_model');
				$data['all_administration_employees'] = $this->Administration_employee_model->get_all_administration_employees();

                $this->load->view('customer_loan_payment/edit',$data);
            }
        }
        else
            show_error('The customer_loan_payment you are trying to edit does not exist.');
    } 

    /*
     * Deleting customer_loan_payment
     */
    function remove($payment_id)
    {
        $customer_loan_payment = $this->Customer_loan_payment_model->get_customer_loan_payment($payment_id);

        // check if the customer_loan_payment exists before trying to delete it
        if(isset($customer_loan_payment['payment_id']))
        {
            $this->Customer_loan_payment_model->delete_customer_loan_payment($payment_id);
            redirect('customer_loan_payment/index');
        }
        else
            show_error('The customer_loan_payment you are trying to delete does not exist.');
    }
    
}
