<?php

/*
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */

class Administration_employee extends CI_Controller {

    function __construct() {
        parent::__construct();
        $this->load->model(array('Administration_employee_model', 'Role_model', 'Client_info_model', 'Administration_designation_model'));
        $this->load->helper(array("datatable"));
        $this->load->library(array("form_validation", "PostData"));
    }

    /*
     * Listing of administration_employees
     */

    function index() {
        $data['_view'] = 'administration_employee/index';
        $this->load->view('layouts/main', $data);
    }

    /**
     * Function to get all admin employees
     * 
     * @return json result
     */
    function getAllAdminEmployees() {
        $request = $_GET;
        $result = $this->Administration_employee_model->get_all_administration_employees($request, array());
        echo json_encode($result);
        exit;
    }

    /*
     * Adding a new administration_employee
     */

    function add() {

        $postData = $this->input->post(NULL, TRUE);
        $data['all_client_info'] = $this->Client_info_model->get_all_client_info();
        $data['all_administration_designation'] = $this->Administration_designation_model->get_all_administration_designation_data();
        $data['all_roles'] = $this->Role_model->get_all_roles();
        if (!empty($postData)) {
            if ($this->form_validation->run("admin_employee_form") == TRUE) {
                $emp_post_data = $this->postdata->getAdminiEmployeeData($postData);
                $administration_employee_id = $this->Administration_employee_model->add_administration_employee($emp_post_data);
                redirect('administration_employee/index');
            } else {
                $data['_view'] = 'administration_employee/add';
                $this->load->view('layouts/main', $data);
            }
        } else {
            $data['_view'] = 'administration_employee/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a administration_employee
     */

    function edit($EMP_ID) {
        $postData = $this->input->post(NULL, TRUE);
        $data['all_client_info'] = $this->Client_info_model->get_all_client_info();
        $data['all_administration_designation'] = $this->Administration_designation_model->get_all_administration_designation_data();
        $data['all_roles'] = $this->Role_model->get_all_roles();
        $data['administration_employee'] = $this->Administration_employee_model->get_administration_employee($EMP_ID);
        if (isset($postData) && !empty($postData)) {
            if ($this->form_validation->run("admin_employee_form") == TRUE) {
                $emp_post_data = $this->postdata->getAdminiEmployeeData($postData, TRUE);
                $this->Administration_employee_model->update_administration_employee($EMP_ID, $emp_post_data);
                redirect('administration_employee/index');
            } else {
                $data['_view'] = 'administration_employee/edit';
                $this->load->view('layouts/main', $data);
            }
        } else {
            $data['_view'] = 'administration_employee/edit';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Deleting administration_employee
     */

    function remove() {
        $request = $_POST;
        $administration_employee = $this->Administration_employee_model->get_administration_employee($request['id']);
        // check if the client_info exists before trying to delete it
        if (isset($administration_employee['EMP_ID'])) {
            $status = $this->Administration_employee_model->delete_administration_employee($request['id']);
            if ($status) {
                echo json_encode(array("status" => "success", "message" => "You have successfully removed " . $administration_employee['EMP_NAME'] . "."));
                exit;
            }
            echo json_encode(array("status" => "error", "message" => "Some thing went wrong."));
            exit;
        } else {
            echo json_encode(array("status" => "error", "message" => "The client_info you are trying to delete does not exist."));
            exit;
        }
    }

}
