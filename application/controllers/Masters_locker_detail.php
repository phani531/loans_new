<?php

/*
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */

class Masters_locker_detail extends CI_Controller {

    function __construct() {
        parent::__construct();
        $this->load->model('Masters_locker_detail_model');
        $this->load->model('Client_info_model');
    }

    /*
     * Listing of masters_locker_details
     */

    function index() {
        $data['masters_locker_details'] = $this->Masters_locker_detail_model->get_all_masters_locker_details();

        $data['_view'] = 'masters_locker_detail/index';
        $this->load->view('layouts/main', $data);
    }

    /**
     * Function to get all masters locker details data
     * 
     * @return json result
     */
    function getAllMastersLockerDetails() {
        $request = $_GET;
        $result = $this->Masters_locker_detail_model->getAllMastersLockerDetailsData($request, array());
        echo json_encode($result);
        exit;
    }

    /*
     * Adding a new masters_locker_detail
     */

    function add() {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'LOCKER_ID' => $this->input->post('LOCKER_ID'),
                'LOCKER_ASSIGNED_BY' => $this->input->post('LOCKER_ASSIGNED_BY'),
                'LOCKER_ASSIGNED_DATE' => $this->input->post('LOCKER_ASSIGNED_DATE'),
                'LOCKER_TERMINATED_DATE' => $this->input->post('LOCKER_TERMINATED_DATE'),
                'LOCKER_TERMINATED_BY' => $this->input->post('LOCKER_TERMINATED_BY'),
            );

            $masters_locker_detail_id = $this->Masters_locker_detail_model->add_masters_locker_detail($params);
            redirect('masters_locker_detail/index');
        } else {
            $data['_view'] = 'masters_locker_detail/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a masters_locker_detail
     */

    function edit($DETAIL_ID) {
        // check if the masters_locker_detail exists before trying to edit it
        $data['masters_locker_detail'] = $this->Masters_locker_detail_model->get_masters_locker_detail($DETAIL_ID);

        if (isset($data['masters_locker_detail']['DETAIL_ID'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'LOCKER_ID' => $this->input->post('LOCKER_ID'),
                    'LOCKER_ASSIGNED_BY' => $this->input->post('LOCKER_ASSIGNED_BY'),
                    'LOCKER_ASSIGNED_DATE' => $this->input->post('LOCKER_ASSIGNED_DATE'),
                    'LOCKER_TERMINATED_DATE' => $this->input->post('LOCKER_TERMINATED_DATE'),
                    'LOCKER_TERMINATED_BY' => $this->input->post('LOCKER_TERMINATED_BY'),
                );

                $this->Masters_locker_detail_model->update_masters_locker_detail($DETAIL_ID, $params);
                redirect('masters_locker_detail/index');
            } else {
                $data['_view'] = 'masters_locker_detail/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The masters_locker_detail you are trying to edit does not exist.');
    }

    /*
     * Deleting masters_locker_detail
     */

    function remove($DETAIL_ID) {
        $masters_locker_detail = $this->Masters_locker_detail_model->get_masters_locker_detail($DETAIL_ID);

        // check if the masters_locker_detail exists before trying to delete it
        if (isset($masters_locker_detail['DETAIL_ID'])) {
            $this->Masters_locker_detail_model->delete_masters_locker_detail($DETAIL_ID);
            redirect('masters_locker_detail/index');
        } else
            show_error('The masters_locker_detail you are trying to delete does not exist.');
    }

}
