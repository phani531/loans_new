<?php

/*
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */

class Customer_detail extends CI_Controller {

    function __construct() {
        parent::__construct();
        $this->load->model(array('Masters_cust_comp_info_model', 'Masters_cust_bank_model', 'Masters_race_model', 'file_model', 'Customer_detail_model', 'Masters_agent_info_model', 'Masters_advertisement_model', 'Administration_comp_profile_model'));
        $this->load->helper(array("datatable"));
        $this->load->library(array('form_validation', 'PostData', 'upload'));
        $session_data = (isset($this->session->userdata['EMP_DATA']) && !empty($this->session->userdata['EMP_DATA'])) ? $this->session->userdata['EMP_DATA'] : array();
        if (empty($session_data))
            redirect("login");
    }

    /*
     * Listing of customer_details
     */

    function index() {
        $data['customer_details'] = $this->Customer_detail_model->get_all_customer_details();

        $data['_view'] = 'customer_detail/index';
        $this->load->view('layouts/main', $data);
    }

    function getAllCustomers() {
        $request = $_GET;
        $result = $this->Customer_detail_model->get_all_customer_details_data($request, array());
        echo json_encode($result);
        exit;
    }

    /*
     * Adding a new customer_detail
     */

    function add($id = 0) {
        $data = array();
        $postData = $this->input->post();
        if ($id != 0) {
            $data['customer_profile'] = $this->Customer_detail_model->get_customer_detail($id);
            if (empty($data['customer_profile']))
                redirect("customer_detail/index");
            $data['customer_address'] = $this->Customer_detail_model->get_address_detail($id);
            $data['customer_reference'] = $this->Customer_detail_model->get_reference_detail($id);
        }
        $data['customer_id'] = $id;
        $data['all_masters_agent_info'] = $this->Masters_agent_info_model->get_all_masters_agent_info();
        $data['all_masters_advertisements'] = $this->Masters_advertisement_model->get_all_masters_advertisements();
        $data['all_administration_comp_profile'] = $this->Administration_comp_profile_model->get_all_administration_comp_profile_data();
        $data['all_masters_race'] = $this->Masters_race_model->get_all_masters_race();
        $data['all_masters_cust_bank'] = $this->Masters_cust_bank_model->get_all_masters_cust_bank();
        $data['all_masters_race'] = $this->Masters_race_model->get_all_masters_race();
        $data['all_masters_cust_comp_info'] = $this->Masters_cust_comp_info_model->get_all_masters_cust_comp_info();
        $data['all_masters_race'] = $this->Masters_race_model->get_all_masters_race();
        $data['all_masters_cust_comp_info'] = $this->Masters_cust_comp_info_model->get_all_masters_cust_comp_info();
        if (!empty($postData)) {
            if ($this->form_validation->run("customer_info_creation_form") == TRUE) {
                if (!empty($_FILES) && isset($_FILES['customer_pic']['name']) && $_FILES['customer_pic']['name'] != "") {
                    $msg = "";
                    $_FILES['customer_pic']['name'] = $_FILES['customer_pic']['name'];
                    $_FILES['customer_pic']['type'] = $_FILES['customer_pic']['type'];
                    $_FILES['customer_pic']['tmp_name'] = $_FILES['customer_pic']['tmp_name'];
                    $_FILES['customer_pic']['error'] = $_FILES['customer_pic']['error'];
                    $_FILES['customer_pic']['size'] = $_FILES['customer_pic']['size'];

                    $uploadPath = 'uploads/profilepics/';
                    $config['upload_path'] = $uploadPath;
                    $config['allowed_types'] = 'gif|jpg|png';
                    $this->upload->initialize($config);
                    if ($this->upload->do_upload('customer_pic')) {
                        $fileData = $this->upload->data();
                        $customer_pic_name = $fileData['file_name'];
                    } else {
                        $msg = $this->upload->display_errors();
                    }
                    if ($msg != "") {
                        $this->session->set_flashdata('errormessage', $msg);
                        ($id == 0 || $id == "") ? redirect("customer_detail/add") : redirect("customer_detail/add/" . $id);
                    }
                }
                if (!empty($_FILES) && isset($_FILES['spouse_pic_name']['name']) && $_FILES['spouse_pic_name']['name'] != "") {
                    $msg = "";
                    $_FILES['spouse_pic_name']['name'] = $_FILES['spouse_pic_name']['name'];
                    $_FILES['spouse_pic_name']['type'] = $_FILES['spouse_pic_name']['type'];
                    $_FILES['spouse_pic_name']['tmp_name'] = $_FILES['spouse_pic_name']['tmp_name'];
                    $_FILES['spouse_pic_name']['error'] = $_FILES['spouse_pic_name']['error'];
                    $_FILES['spouse_pic_name']['size'] = $_FILES['spouse_pic_name']['size'];

                    $uploadPath = 'uploads/profilepics/';
                    $config['upload_path'] = $uploadPath;
                    $config['allowed_types'] = 'gif|jpg|png';
                    $this->upload->initialize($config);
                    if ($this->upload->do_upload('spouse_pic_name')) {
                        $fileData = $this->upload->data();
                        $spouse_pic_name = $fileData['file_name'];
                    } else {
                        $msg = $this->upload->display_errors();
                    }
                    if ($msg != "") {
                        $this->session->set_flashdata('errormessage', $msg);
                        ($id == 0 || $id == "") ? redirect("customer_detail/add") : redirect("customer_detail/add/" . $id);
                    }
                }
                if (!empty($_FILES) && isset($_FILES['gurant_pic']['name']) && $_FILES['gurant_pic']['name'] != "") {
                    $msg = "";
                    $_FILES['gurant_pic']['name'] = $_FILES['gurant_pic']['name'];
                    $_FILES['gurant_pic']['type'] = $_FILES['gurant_pic']['type'];
                    $_FILES['gurant_pic']['tmp_name'] = $_FILES['gurant_pic']['tmp_name'];
                    $_FILES['gurant_pic']['error'] = $_FILES['gurant_pic']['error'];
                    $_FILES['gurant_pic']['size'] = $_FILES['gurant_pic']['size'];

                    $uploadPath = 'uploads/profilepics/';
                    $config['upload_path'] = $uploadPath;
                    $config['allowed_types'] = 'gif|jpg|png';
                    $this->upload->initialize($config);
                    if ($this->upload->do_upload('gurant_pic')) {
                        $fileData = $this->upload->data();
                        $gurant_pic_name = $fileData['file_name'];
                    } else {
                        $msg = $this->upload->display_errors();
                    }
                    if ($msg != "") {
                        $this->session->set_flashdata('errormessage', $msg);
                        ($id == 0 || $id == "") ? redirect("customer_detail/add") : redirect("customer_detail/add/" . $id);
                    }
                }
                if (!empty($_FILES) && isset($_FILES['userFiles']['name']) && $_FILES['userFiles']['name'][0] != "") {
                    $filesCount = count($_FILES['userFiles']['name']);
                    for ($i = 0; $i < $filesCount; $i++) {
                        $_FILES['userFile']['name'] = $_FILES['userFiles']['name'][$i];
                        $_FILES['userFile']['type'] = $_FILES['userFiles']['type'][$i];
                        $_FILES['userFile']['tmp_name'] = $_FILES['userFiles']['tmp_name'][$i];
                        $_FILES['userFile']['error'] = $_FILES['userFiles']['error'][$i];
                        $_FILES['userFile']['size'] = $_FILES['userFiles']['size'][$i];

                        $uploadPath = 'uploads/files/';
                        $config['upload_path'] = $uploadPath;
                        $config['allowed_types'] = 'gif|jpg|png';
                        $this->upload->initialize($config);
                        if ($this->upload->do_upload('userFile')) {
                            $fileData = $this->upload->data();
                            $uploadData[$i]['DOCUMENT_PIC_PATH'] = $fileData['file_name'];
                            $uploadData[$i]['CREATED_DATE'] = date("Y-m-d H:i:s");
                            $uploadData[$i]['MODIFIED_DATE'] = date("Y-m-d H:i:s");
                        } else {
                            $msg = $this->upload->display_errors();
                        }
                    }
                    if ($msg != "") {
                        $this->session->set_flashdata('errormessage', $msg);
                        ($id == 0 || $id == "") ? redirect("customer_detail/add") : redirect("customer_detail/add/" . $id);
                    }
                }
                if ($id == 0 || $id == "") {
                    $cust_data = $this->postdata->getAdminCustProfileData($postData);
                    $customer_address_data = $this->postdata->getCustomerAddressData($postData);
                    $customer_reference_data = $this->postdata->getCustomerReferenceData($postData);
                } else {
                    $cust_data = $this->postdata->getAdminCustProfileData($postData, TRUE);
                    $customer_address_data = $this->postdata->getCustomerAddressData($postData, TRUE);
                    $customer_reference_data = $this->postdata->getCustomerReferenceData($postData, TRUE);
                    $cust_data['id'] = $id;
                }
                if (isset($customer_pic_name) && $customer_pic_name != "") {
                    $cust_data['CUSTOMER_PIC_PATH'] = $customer_pic_name;
                }
                if (isset($spouse_pic_name) && $spouse_pic_name != "") {
                    $cust_data['SPOUSE_PIC_PATH'] = $spouse_pic_name;
                }
                if (isset($gurant_pic_name) && $gurant_pic_name != "") {
                    $cust_data['GUARANTER_PIC_PATH'] = $gurant_pic_name;
                }
                $insert_data['customer_profile'] = $cust_data;
                $insert_data['customer_address'] = $customer_address_data;
                $insert_data['customer_reference'] = $customer_reference_data;
                if (!empty($uploadData))
                    $insert_data['file_data'] = $uploadData;
                $customer_detail_id = $this->Customer_detail_model->add_customer_detail($insert_data);

                redirect('customer_detail/index');
            } else {
                $data['_view'] = 'customer_detail/add';
                $this->load->view('layouts/main', $data);
            }
        } else {
            $data['_view'] = 'customer_detail/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Deleting customer_detail
     */

    function remove() {
        $request = $_POST;
        $customer_detail = $this->Customer_detail_model->get_customer_detail($request['id']);
        if (isset($customer_detail['CUSTOMER_ID'])) {
            $status = $this->Customer_detail_model->delete_customer_detail($request['id']);
            if ($status) {
                echo json_encode(array("status" => "success", "message" => "You have successfully removed " . $customer_detail['CUSTOMER_NAME'] . "."));
                exit;
            }
            echo json_encode(array("status" => "error", "message" => "Some thing went wrong."));
            exit;
        } else {
            echo json_encode(array("status" => "error", "message" => "The customer you are trying to delete does not exist."));
            exit;
        }
    }

}
