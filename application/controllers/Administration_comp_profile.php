<?php

/*
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */

class Administration_comp_profile extends CI_Controller {

    function __construct() {
        parent::__construct();
        $this->load->model(array('Administration_comp_profile_model', 'Client_info_model'));
        $this->load->helper(array("datatable"));
        $this->load->library(array("form_validation", "PostData"));
        $data['title'] = 'Administration';
    }

    /*
     * Listing of administration_comp_profile
     */

    function index() {
        $data['_view'] = 'administration_comp_profile/index';
        $this->load->view('layouts/main', $data);
    }

    public function getBranchList() {
        $request = $_GET;
        $result = $this->Administration_comp_profile_model->get_all_administration_comp_profile($request, array());
        echo json_encode($result);
        exit;
    }

    /*
     * Adding a new administration_comp_profile
     */

    function add() {
        $postData = $this->input->post(NULL, TRUE);
        $data['all_client_info'] = $this->Client_info_model->get_all_client_info();
        if (!empty($postData)) {
            if ($this->form_validation->run("admin_comp_profile_form") == TRUE) {
                $admin_comp_data = $this->postdata->getAdminCompProfileData($postData);
                $administration_comp_profile_id = $this->Administration_comp_profile_model->add_administration_comp_profile($admin_comp_data);
                redirect('administration_comp_profile/index');
            } else {
                $data['_view'] = 'administration_comp_profile/add';
                $this->load->view('layouts/main', $data);
            }
        } else {
            $data['_view'] = 'administration_comp_profile/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a administration_comp_profile
     */

    function edit($BRANCH_ID) {
        $postData = $this->input->post(NULL, TRUE);
        $data['all_client_info'] = $this->Client_info_model->get_all_client_info();
        $data['administration_comp_profile'] = $this->Administration_comp_profile_model->get_administration_comp_profile($BRANCH_ID);
        if (isset($postData) && !empty($postData)) {
            if ($this->form_validation->run("admin_comp_profile_form") == TRUE) {
                $admin_comp_data = $this->postdata->getAdminCompProfileData($postData, TRUE);
                $this->Administration_comp_profile_model->update_administration_comp_profile($BRANCH_ID, $admin_comp_data);
                redirect('administration_comp_profile/index');
            } else {
                $data['_view'] = 'administration_comp_profile/edit';
                $this->load->view('layouts/main', $data);
            }
        } else {
            $data['_view'] = 'administration_comp_profile/edit';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Deleting administration_comp_profile
     */

    function remove() {
        $request = $_POST;
        $administration_comp_profile = $this->Administration_comp_profile_model->get_administration_comp_profile($request['id']);
        if (isset($administration_comp_profile['BRANCH_ID'])) {
            $status = $this->Administration_comp_profile_model->delete_administration_comp_profile($request['id']);
            if ($status) {
                echo json_encode(array("status" => "success", "message" => "You have successfully removed " . $administration_comp_profile['BRANCH_NAME'] . "."));
                exit;
            }
            echo json_encode(array("status" => "error", "message" => "Some thing went wrong."));
            exit;
        } else {
            echo json_encode(array("status" => "error", "message" => "The branch info you are trying to delete does not exist."));
            exit;
        }
    }

}
