<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Customer_doc_checklist extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Customer_doc_checklist_model');
    } 

    /*
     * Listing of customer_doc_checklist
     */
    function index()
    {
        $data['customer_doc_checklist'] = $this->Customer_doc_checklist_model->get_all_customer_doc_checklist();

        $data['_view'] = 'customer_doc_checklist/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new customer_doc_checklist
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'CUSTOMER_ID' => $this->input->post('CUSTOMER_ID'),
				'DOCUMENT_ID' => $this->input->post('DOCUMENT_ID'),
				'DOCUMENT_PIC_PATH' => $this->input->post('DOCUMENT_PIC_PATH'),
				'CREATED_DATE' => $this->input->post('CREATED_DATE'),
				'CREATED_BY' => $this->input->post('CREATED_BY'),
				'MODIFIED_DATE' => $this->input->post('MODIFIED_DATE'),
				'MODIFIED_BY' => $this->input->post('MODIFIED_BY'),
				'CLIENT_ID' => $this->input->post('CLIENT_ID'),
				'IS_ACTIVE' => $this->input->post('IS_ACTIVE'),
            );
            
            $customer_doc_checklist_id = $this->Customer_doc_checklist_model->add_customer_doc_checklist($params);
            redirect('customer_doc_checklist/index');
        }
        else
        {            
            $data['_view'] = 'customer_doc_checklist/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a customer_doc_checklist
     */
    function edit($CHECKLIST_ID)
    {   
        // check if the customer_doc_checklist exists before trying to edit it
        $data['customer_doc_checklist'] = $this->Customer_doc_checklist_model->get_customer_doc_checklist($CHECKLIST_ID);
        
        if(isset($data['customer_doc_checklist']['CHECKLIST_ID']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'CUSTOMER_ID' => $this->input->post('CUSTOMER_ID'),
					'DOCUMENT_ID' => $this->input->post('DOCUMENT_ID'),
					'DOCUMENT_PIC_PATH' => $this->input->post('DOCUMENT_PIC_PATH'),
					'CREATED_DATE' => $this->input->post('CREATED_DATE'),
					'CREATED_BY' => $this->input->post('CREATED_BY'),
					'MODIFIED_DATE' => $this->input->post('MODIFIED_DATE'),
					'MODIFIED_BY' => $this->input->post('MODIFIED_BY'),
					'CLIENT_ID' => $this->input->post('CLIENT_ID'),
					'IS_ACTIVE' => $this->input->post('IS_ACTIVE'),
                );

                $this->Customer_doc_checklist_model->update_customer_doc_checklist($CHECKLIST_ID,$params);            
                redirect('customer_doc_checklist/index');
            }
            else
            {
                $data['_view'] = 'customer_doc_checklist/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The customer_doc_checklist you are trying to edit does not exist.');
    } 

    /*
     * Deleting customer_doc_checklist
     */
    function remove($CHECKLIST_ID)
    {
        $customer_doc_checklist = $this->Customer_doc_checklist_model->get_customer_doc_checklist($CHECKLIST_ID);

        // check if the customer_doc_checklist exists before trying to delete it
        if(isset($customer_doc_checklist['CHECKLIST_ID']))
        {
            $this->Customer_doc_checklist_model->delete_customer_doc_checklist($CHECKLIST_ID);
            redirect('customer_doc_checklist/index');
        }
        else
            show_error('The customer_doc_checklist you are trying to delete does not exist.');
    }
    
}
