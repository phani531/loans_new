<?php

/*
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */

class Customer_addres extends CI_Controller {

    function __construct() {
        parent::__construct();
        $this->load->model('Customer_addres_model');
        $session_data = (isset($this->session->userdata['EMP_DATA']) && !empty($this->session->userdata['EMP_DATA'])) ? $this->session->userdata['EMP_DATA'] : array();
        if (empty($session_data))
            redirect("login");
    }

    /*
     * Listing of customer_address
     */

    function index() {
        $data['customer_address'] = $this->Customer_addres_model->get_all_customer_address();

        $data['_view'] = 'customer_addres/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new customer_addres
     */

    function add() {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'CUSTOMER_ID' => $this->input->post('CUSTOMER_ID'),
                'ADDRESS_KEY' => $this->input->post('ADDRESS_KEY'),
                'ACTUAL_ADDRESS' => $this->input->post('ACTUAL_ADDRESS'),
                'CITY' => $this->input->post('CITY'),
                'STATE_ID' => $this->input->post('STATE_ID'),
                'POSTCODE' => $this->input->post('POSTCODE'),
                'PHONE1' => $this->input->post('PHONE1'),
                'PHONE2' => $this->input->post('PHONE2'),
                'FAX' => $this->input->post('FAX'),
                'CREATED_DATE' => $this->input->post('CREATED_DATE'),
                'CREATED_BY' => $this->input->post('CREATED_BY'),
                'MODIFIED_DATE' => $this->input->post('MODIFIED_DATE'),
                'MODIFIED_BY' => $this->input->post('MODIFIED_BY'),
                'CLIENT_ID' => $this->input->post('CLIENT_ID'),
                'IS_ACTIVE' => $this->input->post('IS_ACTIVE'),
            );

            $customer_addres_id = $this->Customer_addres_model->add_customer_addres($params);
            redirect('customer_addres/index');
        } else {
            $data['_view'] = 'customer_addres/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a customer_addres
     */

    function edit($CONTACT_ID) {
        // check if the customer_addres exists before trying to edit it
        $data['customer_addres'] = $this->Customer_addres_model->get_customer_addres($CONTACT_ID);

        if (isset($data['customer_addres']['CONTACT_ID'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'CUSTOMER_ID' => $this->input->post('CUSTOMER_ID'),
                    'ADDRESS_KEY' => $this->input->post('ADDRESS_KEY'),
                    'ACTUAL_ADDRESS' => $this->input->post('ACTUAL_ADDRESS'),
                    'CITY' => $this->input->post('CITY'),
                    'STATE_ID' => $this->input->post('STATE_ID'),
                    'POSTCODE' => $this->input->post('POSTCODE'),
                    'PHONE1' => $this->input->post('PHONE1'),
                    'PHONE2' => $this->input->post('PHONE2'),
                    'FAX' => $this->input->post('FAX'),
                    'CREATED_DATE' => $this->input->post('CREATED_DATE'),
                    'CREATED_BY' => $this->input->post('CREATED_BY'),
                    'MODIFIED_DATE' => $this->input->post('MODIFIED_DATE'),
                    'MODIFIED_BY' => $this->input->post('MODIFIED_BY'),
                    'CLIENT_ID' => $this->input->post('CLIENT_ID'),
                    'IS_ACTIVE' => $this->input->post('IS_ACTIVE'),
                );

                $this->Customer_addres_model->update_customer_addres($CONTACT_ID, $params);
                redirect('customer_addres/index');
            } else {
                $data['_view'] = 'customer_addres/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The customer_addres you are trying to edit does not exist.');
    }

    /*
     * Deleting customer_addres
     */

    function remove($CONTACT_ID) {
        $customer_addres = $this->Customer_addres_model->get_customer_addres($CONTACT_ID);

        // check if the customer_addres exists before trying to delete it
        if (isset($customer_addres['CONTACT_ID'])) {
            $this->Customer_addres_model->delete_customer_addres($CONTACT_ID);
            redirect('customer_addres/index');
        } else
            show_error('The customer_addres you are trying to delete does not exist.');
    }

}
