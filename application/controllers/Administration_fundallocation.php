<?php

/*
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */

class Administration_fundallocation extends CI_Controller {

    function __construct() {
        parent::__construct();
        $this->load->model(array('Administration_fundallocation_model', 'Administration_employee_model'));
        $this->load->helper(array("datatable"));
    }

    /*
     * Listing of administration_fundallocation
     */

    function index() {
        $data['_view'] = 'administration_fundallocation/index';
        $this->load->view('layouts/main', $data);
    }

    /**
     * Function to get all admin fund allocations
     * 
     * @return json result
     */
    function getAllAdminFundallocations() {
        $request = $_GET;
        $result = $this->Administration_fundallocation_model->get_all_administration_fundallocation($request, array());
        echo json_encode($result);
        exit;
    }

    /*
     * Adding a new administration_fundallocation
     */

    function add() {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('Amount', 'Amount', 'numeric');

        if ($this->form_validation->run()) {
            $params = array(
                'FA_DATE' => $this->input->post('FA_DATE'),
                'EMP_ID' => $this->input->post('EMP_ID'),
                'Amount' => $this->input->post('Amount'),
                'IS_ACTIVE' => 1,
                'CREATED_BY' => $this->session->userdata['user']['LOGIN_ID'],
                'CREATED_DATE' => date("Y-m-d H:i:s"),
            );

            $administration_fundallocation_id = $this->Administration_fundallocation_model->add_administration_fundallocation($params);
            redirect('administration_fundallocation/index');
        } else {
            $this->load->model('Administration_employee_model');
            $data['all_administration_employees'] = $this->Administration_employee_model->get_all_administration_employees_data();

            $data['_view'] = 'administration_fundallocation/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a administration_fundallocation
     */

    function edit($FA_ID) {
        // check if the administration_fundallocation exists before trying to edit it
        $data['administration_fundallocation'] = $this->Administration_fundallocation_model->get_administration_fundallocation($FA_ID);

        if (isset($data['administration_fundallocation']['FA_ID'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('Amount', 'Amount', 'numeric');

            if ($this->form_validation->run()) {
                $params = array(
                    'FA_DATE' => $this->input->post('FA_DATE'),
                    'EMP_ID' => $this->input->post('EMP_ID'),
                    'Amount' => $this->input->post('Amount'),
                    'IS_ACTIVE' => 1,
                    'MODIFIED_DATE' => date("Y-m-d H:i:s"),
                    'MODIFIED_BY' => $this->session->userdata['user']['LOGIN_ID'],
                );

                $this->Administration_fundallocation_model->update_administration_fundallocation($FA_ID, $params);
                redirect('administration_fundallocation/index');
            } else {
                $this->load->model('Administration_employee_model');
                $data['all_administration_employees'] = $this->Administration_employee_model->get_all_administration_employees_data();

                $data['_view'] = 'administration_fundallocation/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The administration_fundallocation you are trying to edit does not exist.');
    }

    /*
     * Deleting administration_fundallocation
     */

    function remove($FA_ID) {
        $administration_fundallocation = $this->Administration_fundallocation_model->get_administration_fundallocation($FA_ID);

        // check if the administration_fundallocation exists before trying to delete it
        if (isset($administration_fundallocation['FA_ID'])) {
            $this->Administration_fundallocation_model->delete_administration_fundallocation($FA_ID);
            redirect('administration_fundallocation/index');
        } else
            show_error('The administration_fundallocation you are trying to delete does not exist.');
    }

}
